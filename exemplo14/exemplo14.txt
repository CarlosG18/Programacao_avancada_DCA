questâo 14:

Reimplemente o programa da questão anterior utilizando a função qsort() do C. Comente o seu
código, explicando o que faz cada uma das linhas

#include <stdio.h>
#include <stdlib.h> //lib do qsort()

int compare (const void * a, const void * b)
{
  return ( *(float*)a - *(float*)b );
}

int main(void){
  int n, i;

  printf("insira a quantidade de valores que serão ordenados = ");
  scanf("%d", &n); //recebendo a quantidade de numeros

  float *pv;

  pv = malloc(n*sizeof(float)); //alocando um vetor com n vezes o tamanho ds bytes que o float ocupa

  for(i=0;i<n;i++){
    printf("valor %i = ", i+1);
    scanf("%f", pv+i); // recebendo do usuario os valores do vetor
  }

  qsort(pv, n, compare);

  printf("\n\nVALORES DO VETOR ORDENADO EM ORDEM CRESCENTE:\nvetor:[");
  for(i=0;i<n;i++){
    if(i == n-1)
    printf("%.1f", *(pv+i));
    else printf("%.1f,", *(pv+i)); //imprimindo cada elemento do vetor
  }
  printf("]");

  free(pv); // liberando o vetor da memoria

  return 0;
}
